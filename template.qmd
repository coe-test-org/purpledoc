---
title: Purple Doc Quarto Template
description: an example of the purple doc quarto style
format:
  purpledoc-html: default
author: frankthetank
date: last-modified
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.


you can use a box shadow by calling the `myframe` css class like this, with the code wrapped in `:::{/myframe :::}`:

````markdown
:::{.myframe}
```{{r}}
code here
```
:::
````

::: myframe
```{r filename="script_in_repo.R"}
#| eval: false
# this script is in the repo, but credentials are hidden
library(yaml)

# read in the local credentials yaml file
creds <- yaml::read_yaml("path/to/local_credentials.yml")

# pull in the credentials
server_name <- creds$default$conn_list_wdrs$server
```
:::

similarly, call `smallframe` for smaller code chunks

:::{.smallframe}
```{bash filename="zsh"}
#| eval: false
conda activate my_environment
```
:::

## Custom Callout Blocks

this template comes with custom callout blocks. 

:::{.note}
 **Objectives**

1.  Provide security guidelines
2.  Set up security guardrails
3.  Develop a process for reviewing code and pushing private code to a public repo
:::

## Adding Images

this template comes with images. to put an image into the doc, do this
`![](assets/image.ext)`

examples:
`![](images/nwpage_tree_logo.png)`

![](images/nwpage_tree_logo.png)

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).



